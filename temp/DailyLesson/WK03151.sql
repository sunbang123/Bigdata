
SELECT TABLE_NAME FROM USER_TABLES;
DESC T_STUDENT;
SELECT * FROM T_STUDENT;
INSERT INTO T_STUDENT(STU_NO,STU_NAME,STU_DEPT,STU_CLASS,STU_GENDER,STU_HEIGHT,STU_WEIGHT)
VALUES(20140000,'TOM','전기전자','A','M',NULL,NULL);
DESC T_STUDENT;

--2.UNIQE KEY OF CONSTRAINTS?
DROP TABLE T_STUDENT;
CREATE TABLE T_STUDENT(
STU_NO NUMBER(10),
STU_NAME VARCHAR2(20)
CONSTRAINT UK_STU_NAME UNIQUE,
STU_DEPT VARCHAR2(20)
CONSTRAINT NN_STU_DEPT NOT NULL,
STU_GRADE NUMBER(5),
STU_GENDER CHAR(3),
STU_HEIGHT NUMBER(10),
STU_WEIGHT NUMBER(10,2));

SELECT *
FROM USER_CONSTRAINTS
WHERE TABLE_NAME='T_STUDENT';
SELECT * FROM T_STUDENT;
INSERT INTO T_STUDENT
VALUES(20150000,'TOM','기계',2,'M',188,78.54);
INSERT INTO T_STUDENT
VALUES(20150000,'TOMS','기계',2,'M',188,78.54);
SELECT * FROM T_STUDENT;
INSERT INTO T_STUDENT
VALUES(20150000,NULL,'기계',2,'M',188,78.54);
INSERT INTO T_STUDENT
VALUES(20150000,'TOM2','전기전자',2,'M',188,78.54);

--3.PRIMARY KEY? NOT NULL+UNIQUE
DROP TABLE T_STUDENT;
CREATE TABLE T_STUDENT(
STU_NO NUMBER(10),
STU_NAME VARCHAR2(20)
CONSTRAINT UK_STU_NAME UNIQUE,
STU_DEPT VARCHAR2(20)
CONSTRAINT NN_STU_DEPT NOT NULL,
STU_GRADE NUMBER(5),
STU_GENDER CHAR(3),
STU_HEIGHT NUMBER(10),
STU_WEIGHT NUMBER(10,2),
CONSTRAINT PK_STU_NO PRIMARY KEY(STU_NO));

DESC T_STUDENT;
SELECT *
FROM USER_CONSTRAINTS
WHERE TABLE_NAME='T_STUDENT';
INSERT INTO T_STUDENT
VALUES(20150000,'JANG1','전기전자',2,'M',188,78.54);
INSERT INTO T_STUDENT
VALUES(20150001,'JANG2','전기전자',2,'M',188,78.54);
SELECT * FROM T_STUDENT;

--4.CHECK?
INSERT INTO T_STUDENT
VALUES(20150002,'JANG3','전기전자',2,'MAL',188,78.54);
SELECT * FROM T_STUDENT;

DROP TABLE T_STUDENT;
CREATE TABLE T_STUDENT(
STU_NO NUMBER(10),
STU_NAME VARCHAR2(20)
CONSTRAINT UK_STU_NAME UNIQUE,
STU_DEPT VARCHAR2(20)
CONSTRAINT NN_STU_DEPT NOT NULL,
STU_GRADE NUMBER(5),
STU_GENDER CHAR(3)
CONSTRAINT CK_STU_GENDER CHECK(STU_GENDER IN('M','F')),
STU_HEIGHT NUMBER(10),
STU_WEIGHT NUMBER(10,2),
CONSTRAINT PK_STU_NO PRIMARY KEY(STU_NO));

SELECT * FROM USER_CONSTRAINTS WHERE TABLE_NAME='T_STUDENT';
INSERT INTO T_STUDENT
VALUES(20150003,'JANG4','전기전자',2,'M',188,78.54);
INSERT INTO T_STUDENT
VALUES(20150004,'JANG5','전기전자',2,'F',188,78.54);
SELECT * FROM T_STUDENT;

--5. FOREIGN KEY
--왜래키를 설정하기 위해 참조하는 키는 반드시 고유키(기본키)여야 함.
SELECT *
FROM USER_CONSTRAINTS
WHERE TABLE_NAME='SUBJECT';

CREATE TABLE T_ENROL(
SUB_NO CHAR(3),
STU_NO NUMBER(9),
ENR_GRADE NUMBER(5),
CONSTRAINT ENR_STU_NO_FK1 FOREIGN KEY(STU_NO) REFERENCES T_STUDENT(STU_NO),
CONSTRAINT ENR_STU_NO_PK PRIMARY KEY(STU_NO));
DESC T_STUDENT;

SELECT *
FROM USER_CONSTRAINTS
WHERE TABLE_NAME='T_ENROL';

--제약조건의 삭제하는 방법?
ALTER TABLE T_ENROL
DROP CONSTRAINT ENR_STU_NO_FK1 CASCADE;

--제약조건의 비활성화 방법
SELECT *
FROM USER_CONSTRAINTS
WHERE TABLE_NAME='T_ENROL';

ALTER TABLE T_STUDENT
ENABLE CONSTRAINT NN_STU_DEPT;//DISABLE

--VIEW TABLE?
CREATE OR REPLACE VIEW V_STUDENT1
AS
SELECT * FROM STUDENT WHERE STU_DEPT='기계';
SELECT * FROM V_STUDENT1;

--조인뷰?
CREATE OR REPLACE VIEW V_ENROL1
AS
SELECT SUB_NAME,B.SUB_NO,A.STU_NO,ENR_GRADE
FROM ENROL A,SUBJECT B
WHERE A.SUB_NO=B.SUB_NO;
SELECT * FROM V_ENROL1;

--인라인뷰?
--학과별 평균신장보다 큰 학생들의 학번, 이름, 신장을 검색하라?
SELECT STU_NO, STU_NAME, STU_HEIGHT
FROM STUDENT A,(SELECT STU_DEPT,AVG(STU_HEIGHT) AS AVH
FROM STUDENT GROUP BY STU_DEPT) B
WHERE A.STU_DEPT=B.STU_DEPT
AND A.STU_HEIGHT>B.AVH;

--TOP-N질의문?
--학생테이블에서 신장이 큰 상위 5명의 학번 이름 신장을 검색하라?
SELECT STU_NO,STU_NAME,STU_HEIGHT
FROM (SELECT STU_NO,STU_NAME,STU_HEIGHT
FROM STUDENT WHERE STU_HEIGHT IS NOT NULL
ORDER BY STU_HEIGHT DESC)
WHERE ROWNUM<=5;

--INDEX?
CREATE INDEX I_STU_NAME ON STUDENT(STU_NAME);
CREATE INDEX I_STU_NO_NAME ON STUDENT(STU_NO,STU_NAME);

--시퀀스?
CREATE SEQUENCE SEQ1
INCREMENT BY 2
START WITH 1000
MAXVALUE 10000;
SELECT SEQ1.NEXTVAL FROM DUAL;
CREATE SEQUENCE SEQ2
INCREMENT BY 1
START WITH 1
MAXVALUE 10000;

SELECT SEQ2.NEXTVAL FROM DUAL;

--실전문제?
--1.사원테이블과 같은 구조의 T_TBL1테이블을 생성하라?
DESC EMP;
SELECT * FROM USER_CONSTRAINTS WHERE TABLE_NAME='EMP';
CREATE TABLE T_TBL1(
T_EMPNO NUMBER(4),
T_ENAME VARCHAR2(10),
T_JOB VARCHAR2(9),
MGR NUMBER(5),
T_HIREDATE DATE,
T_SAL NUMBER(7,2),
COMM NUMBER(7,2),
DEPTNO NUMBER(5),
CONSTRAINT PK_T_EMPNO PRIMARY KEY(T_EMPNO));
DESC T_TBL1;
--사원테이블에서 부서번호가 20인 사원들을 T_TBL1에 복사하라
INSERT INTO T_TBL1
SELECT * FROM EMP WHERE DEPTNO=20;
SELECT * FROM T_TBL1;

--3. T_TBL1에 성별열을 삽입하라(데이터 타입은 CHAR(1))
ALTER TABLE T_TBL1
ADD(T_GENDER CHAR(1));
DESC T_TBL1;
SELECT * FROM T_TBL1;

--4. 현재 T_TBL1의 T_GENDER의 구조를 CHAR에서 VARCHAR2(10)으로 변경하라?
ALTER TABLE T_TBL1
MODIFY(T_GENDER VARCHAR2(10));
DESC T_TBL1;

--5. T_TBL1의 성별을 제거하라?
ALTER TABLE T_TBL1
DROP(T_GENDER);
DESC T_TBL1;

--6. T_TBL1의 모든 데이터를 삭제하라
SELECT * FROM T_TBL1;
TRUNCATE TABLE T_TBL1;

--7. T_TBL1의 제약조건을 확인하라?
SELECT * FROM USER_CONSTRAINTS WHERE TABLE_NAME='T_TBL1';

--8. 사원테이블(EMP)로부터 20번 부서의 사원들로 이루어진 뷰 테이블을 생성하시오
CREATE OR REPLACE VIEW V_EMP1
AS SELECT * FROM EMP WHERE DEPTNO=20;
SELECT * FROM V_EMP1;

--9. 사원번호, 사원이름, 부서이름을 갖는 뷰테이블을 생성하시오?
SELECT * FROM DEPT;
CREATE OR REPLACE VIEW V_EMP2
AS SELECT EMPNO,ENAME,DNAME FROM EMP,DEPT
WHERE EMP.DEPTNO=DEPT.DEPTNO;
SELECT * FROM V_EMP2;

--10.부서별 사원중 가장 최근에 입사한 사원보다 먼저 입사한 사원의 정보를 검색하라?
SELECT *
FROM EMP A,(SELECT DEPTNO,MAX(HIREDATE) AS MAXD
FROM EMP GROUP BY DEPTNO) B
WHERE A.DEPTNO=B.DEPTNO
AND A.HIREDATE<B.MAXD;

SELECT DEPTNO,MAX(HIREDATE) AS MAXD
FROM EMP GROUP BY DEPTNO;